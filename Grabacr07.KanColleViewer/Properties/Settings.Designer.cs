//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Grabacr07.KanColleViewer.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "12.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("37564")]
        public int LocalProxyPort {
            get {
                return ((int)(this["LocalProxyPort"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://www.dmm.com/netgame/social/application/-/detail/=/app_id=854854/")]
        public global::System.Uri KanColleUrl {
            get {
                return ((global::System.Uri)(this["KanColleUrl"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"body {
    margin:0;
    overflow:hidden;
}

#game_frame {
    position:fixed;
    left:50%;
    top:-16px;
    margin-left:-450px;
    z-index:1;
}

#flashWrap {
    position:fixed;
    z-index:1;
    margin:0;
}

#spacing_top, #sectionWrap {
    visibility: hidden !important;
    height:0 !important;
    display: none !important;
}")]
        public string OverrideStyleSheet {
            get {
                return ((string)(this["OverrideStyleSheet"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("333")]
        public double UIContentHight {
            get {
                return ((double)(this["UIContentHight"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("8000")]
        public int FeatureBrowserEmulation {
            get {
                return ((int)(this["FeatureBrowserEmulation"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("https://raw.github.com/Zharay/KanColleViewer/master/resources/translations/")]
        public global::System.Uri XMLTransUrl {
            get {
                return ((global::System.Uri)(this["XMLTransUrl"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("https://raw.github.com/Zharay/KanColleViewer/master/resources/Version.xml")]
        public global::System.Uri KCVUpdateUrl {
            get {
                return ((global::System.Uri)(this["KCVUpdateUrl"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("var flashQuality = function () {{\r\n\ttry {{\r\n    for (var objs = document.embeds, " +
            "i = objs.length - 1; i >= 0; i--) {{\r\n        if (objs[i].getAttribute(\'quality\'" +
            ") == \'{0}\') \r\n            continue;\r\n        \r\n        var embedElem = document." +
            "createElement(\'embed\');\r\n        var parentElem = objs[i].parentNode;\r\n        \r" +
            "\n        for (var attrib = objs[i].attributes, j = attrib.length; j >= 0; j--) {" +
            "{\r\n            if (attrib[j] != null) if (attrib[j].specified) {{\r\n             " +
            "   embedElem.setAttribute(attrib[j].name, attrib[j].value);\r\n            }}\r\n   " +
            "     }}\r\n        \r\n        embedElem.setAttribute(\'quality\', \'{0}\');\r\n        em" +
            "bedElem.setAttribute(\'wmode\', \'{1}\');\r\n        \r\n        parentElem.removeChild(" +
            "objs[i]);\r\n        parentElem.appendChild(embedElem);\r\n    }}\r\n    \r\n    for (va" +
            "r objs = document.getElementsByTagName(\'object\'), i = objs.length - 1; i >= 0; i" +
            "--) {{\r\n        var embedElem = document.createElement(\'embed\');\r\n        var pa" +
            "rentElem = objs[i].parentNode;\r\n        \r\n        for (var c = objs[i].childNode" +
            "s, j = c.length - 1; j >= 0; j--) {{\r\n            embedElem.setAttribute(c[j].ta" +
            "gName, c[j].getAttribute(\'value\'));\r\n        }}\r\n        \r\n        embedElem.set" +
            "Attribute(\'quality\', \'{0}\');\r\n        embedElem.setAttribute(\'wmode\', \'{1}\');\r\n " +
            "       \r\n        parentElem.removeChild(objs[i]);\r\n        parentElem.appendChil" +
            "d(embedElem);\r\n\t}}\r\n\t}}\r\n\tcatch(e) {{\r\n\tif ({2}) alert(\"Quality Settings Failed!" +
            "\\n\"+e.message);\r\n\t}}\r\n}};\r\n\r\nvar InjectTimeOut = 0;\r\n\r\nvar TimedInject = setInte" +
            "rval(function () {{\r\n    CheckChange();\r\n}}, 100);\r\n\r\nfunction CheckChange() {{\r" +
            "\n    if (document.getElementById(\'flashWrap\') {{\r\n\t    if document.getElementByI" +
            "d(\'flashWrap\').innerHTML.length > 10) {{\r\n            flashQuality();\r\n         " +
            "   clearInterval(TimedInject);\r\n\t\t}}\r\n\t\telse {{\r\n\t\t    InjectTimeOut++;  \r\n\t    " +
            "}}\r\n    }}\r\n\tif (!document.getElementById(\'flashWrap\') || InjectTimeOut >= 100) " +
            "{{\r\n        clearInterval(TimedInject);\r\n    }}\r\n}}")]
        public string FlashQualityJS {
            get {
                return ((string)(this["FlashQualityJS"]));
            }
        }
    }
}
